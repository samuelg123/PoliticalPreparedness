plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
if (localPropertiesFile.canRead()) {
    localProperties.load(localPropertiesFile.newDataInputStream())
}

android {
    compileSdkVersion 31
    buildFeatures {
        dataBinding true
    }
    defaultConfig {
        applicationId 'com.example.android.politicalpreparedness'
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        // To support API SDK < 24 build-time PNG generation for xml
        buildConfigField "String", "CIVIC_API_KEY", "\"${localProperties['civicApiKey']}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$version_desugar_jdk"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle_extensions"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation "com.squareup.moshi:moshi-adapters:$version_moshi"

    kapt "com.squareup.moshi:moshi-kotlin-codegen:$version_moshi"


    // Glide
    //TODO: Add Glide Implementation - OK
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Room
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$version_hilt"
    kapt "com.google.dagger:hilt-compiler:$version_hilt"

    //Material
    implementation "com.google.android.material:material:1.4.0"

    //Chucker HTTP Inspector
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"

    // Location
    implementation "com.google.android.gms:play-services-location:$version_play_services_location"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$version_kotlin_coroutines"
}
